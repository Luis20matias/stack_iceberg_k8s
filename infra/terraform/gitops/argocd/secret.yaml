apiVersion: v1
kind: Secret
metadata:
  name: minikube-mds-secret
  namespace: gitops
  labels:
    argocd.argoproj.io/secret-type: cluster
data:
  name: aWNlLWlubm8= # base64-encoded name of the context, e.g., echo -n "ice-inno" | base64
  server: aHR0cHM6Ly8xMjcuMC4wLjE6MzI3ODY= # base64-encoded server URL, e.g., echo -n "https://127.0.0.1:32786" | base64
  config: 
